~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

WELCOME MESSAGE SYSTEM IMPLEMENTATION GUIDE

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This guide will help you integrate the complete welcome message system into your Discord.py bot.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

REQUIREMENTS:
- Python 3.7 or higher
- Discord bot using discord.py 2.0+
- Bot with proper intents enabled

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 1: PLACE THE FILE
- Copy `welcome_messages_for_channel.py` into your bot project root directory
- Make sure the file is in the same folder as your main bot file

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 2: ENABLE REQUIRED INTENTS
- In your bot setup, `Intents.members` must be enabled in code AND in the Discord Developer Portal

import discord
from discord.ext import commands

intents = discord.Intents.default()
intents.members = True  # REQUIRED for on_member_join event
bot = commands.Bot(command_prefix="/", intents=intents)

IMPORTANT: You must also enable "Server Members Intent" in your Discord Developer Portal:
1. Go to https://discord.com/developers/applications
2. Select your bot application
3. Go to "Bot" section
4. Scroll down to "Privileged Gateway Intents"
5. Enable "Server Members Intent"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 3: LOAD THE WELCOME MESSAGE SYSTEM

Choose ONE of these methods:

METHOD A: Using setup_hook (Recommended for most bots)

class MyBot(commands.Bot):
    async def setup_hook(self):
        await self.load_extension("welcome_messages_for_channel")

bot = MyBot(command_prefix="/", intents=intents)

METHOD B: Using async main function

import asyncio

async def main():
    async with bot:
        await bot.load_extension("welcome_messages_for_channel")
        await bot.start(TOKEN)

asyncio.run(main())

METHOD C: Direct cog addition (if not using extensions)

from welcome_messages_for_channel import WelcomeMessageCog
await bot.add_cog(WelcomeMessageCog(bot))

Note: Most modern Discord bots use Method A (setup_hook). Only use Method B if you have a specific reason to structure your bot differently.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 4: CONFIGURE THE WELCOME CHANNEL
- Open `welcome_messages_for_channel.py`
- Find the line: `WELCOME_CHANNEL_ID = 1398462946635419719`
- Replace `1398462946635419719` with your actual welcome channel ID

To get your channel ID:
1. Enable Developer Mode in Discord (User Settings > Advanced > Developer Mode)
2. Right-click on your welcome channel
3. Click "Copy ID"
4. Paste it in place of the example ID

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 5: CUSTOMIZE THE WELCOME MESSAGE (Optional)

CUSTOMIZE SERVER NAME AND MEMBER TITLE:
- Find the `generate_welcome_message` function
- Change "YOURSERVERNAME" to your server name
- Change "princess" to your preferred member title (e.g., "homie", "member", "player")

CUSTOMIZE EMOJIS:
- Edit the `WELCOME_EMOJIS` list to add/remove emojis
- Each welcome message will use two different random emojis
- You can use custom server emojis or standard Discord emojis

REPLACING CUSTOM EMOJIS WITH STANDARD ONES:
If you don't have custom server emojis, replace the emoji list with standard Discord emojis:
self.welcome_emojis = [
    "üéâ", "üëã", "üéä", "‚ú®", "üåü", "üí´", "üî•", "üíØ", "üéØ", "üöÄ",
    "üíé", "‚≠ê", "üéÅ", "üéà", "üé™", "üé®", "üé≠", "üé™", "üéüÔ∏è", "üé´"
]

CUSTOMIZE MESSAGE FORMAT:
- Modify the message format in the `generate_welcome_message` function
- The current format is:
  Line 1: "# [emoji1] What up @username [emoji1]"
  Line 2: "**[emoji2] Welcome to [ServerName]!! You are the Xth [member_title] to join** [emoji2]"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 6: COMPLETE BOT SETUP EXAMPLE

import discord
from discord.ext import commands
import asyncio

intents = discord.Intents.default()
intents.members = True

class MyBot(commands.Bot):
    async def setup_hook(self):
        await self.load_extension("welcome_messages_for_channel")

bot = MyBot(command_prefix="/", intents=intents)

@bot.event
async def on_ready():
    print(f"{bot.user} is ready!")
    print("Welcome message system loaded successfully!")

# Replace YOUR_BOT_TOKEN with your actual bot token
bot.run("YOUR_BOT_TOKEN")

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 7: REQUIRED BOT PERMISSIONS

The bot must have these permissions in your Discord server:
- "Send Messages" permission in the welcome channel
- "Use External Emojis" permission (if using custom emojis from other servers)
- "View Channels" permission in the welcome channel

To check permissions:
1. Right-click on your bot in the member list
2. Check that it has the required permissions
3. If not, ask a server admin to adjust the bot's role permissions

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

STEP 8: TESTING AND VERIFICATION

1. Start your bot
2. Check the console for: "Welcome message system loaded successfully!"
3. Invite a test account or have someone join your server
4. The bot should automatically post a welcome message in your configured channel
5. The message should include:
   - Two different random emojis
   - The new member's mention
   - Your server name and member count

CONSOLE OUTPUT TO EXPECT:
- On startup: "Welcome message system loaded successfully!"
- When someone joins: "Sent channel welcome message for [username] to welcome channel ([channel_id])"
- If errors occur: Error messages will be displayed in the console

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TROUBLESHOOTING COMMON ISSUES

IF THE COG DOESN'T LOAD:
- Check console for import errors
- Verify the filename is exactly `welcome_messages_for_channel.py`
- Make sure the file is in the same directory as your main bot file

IF WELCOME MESSAGES DON'T APPEAR:
- Verify the channel ID is correct
- Check bot permissions in the welcome channel
- Ensure "Server Members Intent" is enabled in Discord Developer Portal
- Check that `intents.members = True` is set in your bot code

IF EMOJIS DON'T SHOW:
- Ensure the bot has "Use External Emojis" permission
- Check that the emoji IDs in `WELCOME_EMOJIS` are valid
- Verify the emojis are accessible to your bot
- Consider using standard Discord emojis instead of custom ones

IF THE BOT CRASHES ON STARTUP:
- Check that discord.py version is 2.0 or higher
- Verify all required intents are properly configured
- Check console for specific error messages

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

ALTERNATIVE IMPLEMENTATION OPTIONS:

If you don't want to use the Cog system, the file also includes:

1. WelcomeMessageBot class - Run as a standalone bot
2. Manual integration - Copy specific functions into your existing bot
3. Full documentation for each implementation method

See the comments in the file for detailed instructions on each option.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

I hope you and your members LOVE IT! 

ENJOY ~ landn.thrn

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Find more of my creations on Github:
https://github.com/landnthrn?tab=repositories

Support me on Buy Me a Coffee
https://buymeacoffee.com/landn.thrn

Paypal Donation:
https://www.paypal.com/donate/?hosted_button_id=K4PLHFVBH7X8C

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
























